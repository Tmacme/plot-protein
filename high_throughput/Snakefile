#High Throughput Plot Protein Pipeline
#Tychele Turner, Ph.D.
#June 9, 2016

import os

#configuration
if config == {}:
    configfile: "config.json"

PROTEIN_FILE = config["proteins_to_plot"]
MUTFILE = config["mutation_file"]
DOMAIN = config["domain_file"]
POST_TRANSLATION = config["post_translational_modification_file"]
PROTEIN_LENGTH = config["protein_length"]

#show proteins to run
PROTEINS = []
with open(PROTEIN_FILE) as f:
    PROTEINS = f.read().splitlines()
print(PROTEINS)

rule all:
        input: MUTFILE, expand("{protein}_finished.txt", protein = PROTEINS)
	params: sge_opts="-l mfree=20G -N run_all" 

rule plot_protein:
        input: MUTFILE
        output: "{protein}_finished.txt"
        params: prefix="{protein}", sge_opts="-l mfree=500M,h_rt=24:00:00 -N plot_protein -cwd"
        shell: """
        set +e
	module load modules modules-init modules-gs
	module load R/3.0.0

        #mutations
        grep {params.prefix} {input} | awk '{{FS="\\t"; print $2"\\t"$1"\\t"$4"\\t""R""\\t""A"}}' > {params.prefix}_mutation.txt

        #architecture
        grep {params.prefix} {DOMAIN}  | awk '{{FS="\\t" ; print $5"\\t"$7"\\t"$8}}' > {params.prefix}_architecture.txt

        if [ -s {params.prefix}_architecture.txt ]; then
            echo "The domain file has data"
        else
            echo "The domain file is empty"
            echo -e 'PSN\\t-1002\\t-1001' > {params.prefix}_architecture.txt
        fi

        #pt modification
        grep {params.prefix} {POST_TRANSLATION}  | awk '{{print $5}}' > {params.prefix}_PT.txt
        if [ -s {params.prefix}_PT.txt ]; then
             echo "The post translational file has data"
        else
             echo "The post translational file is empty"
             echo -e '-1003' > {params.prefix}_PT.txt
        fi

        #protein length
        grep {params.prefix} {PROTEIN_LENGTH} | awk '{{FS="\\t"; print $2}}' > {params.prefix}_length.txt

        #run plot
        Rscript /net/eichler/vol4/home/tychele/github/plot-protein/high_throughput/ht_plot_protein.R -m {params.prefix}_mutation.txt -a {params.prefix}_architecture.txt -p {params.prefix}_PT.txt -l {params.prefix}_length.txt -t 25 -n {params.prefix} -s yes

        rm {params.prefix}_mutation.txt
        rm {params.prefix}_architecture.txt
        rm {params.prefix}_PT.txt
        rm {params.prefix}_length.txt

        touch {output}
	"""

rule clean:
	"""clean up temporary files"""
	shell: """
        rm *_finished.txt
	"""

